dp IR(in opcode ns(32);
	out R, Q : ns(5))
{
// todo : Insert code here!
reg A : ns(5);
always{
	A= A+1;
	R = A;
	Q = R - 30;
}

}
dp testAdder32(in R, Q :ns(5))
{
always{
$display($dec, "Cycle:", $cycle, "R=", R, ", Q= ", Q);
}
sfg test_0 { }
}
// note : State machine to control the adder testbench.
fsm f_testbench(testAdder32)
{
initial s0; // begin with state s0
@s0 (test_0) -> s0; // run test_0 and go to s1
}

system myFirstSystem
{
adder32(R, Q);
testAdder32(R, Q);
}
